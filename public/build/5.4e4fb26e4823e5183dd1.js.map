{"version":3,"file":"5.4e4fb26e4823e5183dd1.js","sources":["webpack:////./public/app/features/org/SelectOrgPage.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { getBackendSrv, config } from '@grafana/runtime';\nimport { UserOrg } from 'app/types';\nimport { useAsync } from 'react-use';\nimport { Button, HorizontalGroup } from '@grafana/ui';\n\nconst navModel = {\n  main: {\n    icon: 'grafana',\n    subTitle: 'Preferences',\n    text: 'Select active organization',\n  },\n  node: {\n    text: 'Select active organization',\n  },\n};\n\nconst getUserOrgs = async () => {\n  return await getBackendSrv().get('/api/user/orgs');\n};\nconst setUserOrg = async (org: UserOrg) => {\n  return await getBackendSrv()\n    .post('/api/user/using/' + org.orgId)\n    .then(() => {\n      window.location.href = config.appSubUrl + '/';\n    });\n};\n\nexport const SelectOrgPage: FC = () => {\n  const [orgs, setOrgs] = useState<UserOrg[]>();\n\n  useAsync(async () => {\n    setOrgs(await getUserOrgs());\n  }, []);\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <div>\n          <p>\n            You have been added to another Organization due to an open invitation! Please select which organization you\n            want to use right now (you can change this later at any time).\n          </p>\n          <HorizontalGroup wrap>\n            {orgs &&\n              orgs.map(org => (\n                <Button key={org.orgId} icon=\"signin\" onClick={() => setUserOrg(org)}>\n                  {org.name}\n                </Button>\n              ))}\n          </HorizontalGroup>\n        </div>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default SelectOrgPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAOA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAEA;;;;A","sourceRoot":""}